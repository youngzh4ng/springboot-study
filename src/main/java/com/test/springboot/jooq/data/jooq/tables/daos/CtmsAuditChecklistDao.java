/*
 * This file is generated by jOOQ.
*/
package com.test.springboot.jooq.data.jooq.tables.daos;


import com.test.springboot.jooq.data.jooq.tables.CtmsAuditChecklist;
import com.test.springboot.jooq.data.jooq.tables.records.CtmsAuditChecklistRecord;

import java.math.BigInteger;
import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CtmsAuditChecklistDao extends DAOImpl<CtmsAuditChecklistRecord, com.test.springboot.jooq.data.jooq.tables.pojos.CtmsAuditChecklist, BigInteger> {

    /**
     * Create a new CtmsAuditChecklistDao without any configuration
     */
    public CtmsAuditChecklistDao() {
        super(CtmsAuditChecklist.CTMS_AUDIT_CHECKLIST, com.test.springboot.jooq.data.jooq.tables.pojos.CtmsAuditChecklist.class);
    }

    /**
     * Create a new CtmsAuditChecklistDao with an attached configuration
     */
    public CtmsAuditChecklistDao(Configuration configuration) {
        super(CtmsAuditChecklist.CTMS_AUDIT_CHECKLIST, com.test.springboot.jooq.data.jooq.tables.pojos.CtmsAuditChecklist.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected BigInteger getId(com.test.springboot.jooq.data.jooq.tables.pojos.CtmsAuditChecklist object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>ID IN (values)</code>
     */
    public List<com.test.springboot.jooq.data.jooq.tables.pojos.CtmsAuditChecklist> fetchById(BigInteger... values) {
        return fetch(CtmsAuditChecklist.CTMS_AUDIT_CHECKLIST.ID, values);
    }

    /**
     * Fetch a unique record that has <code>ID = value</code>
     */
    public com.test.springboot.jooq.data.jooq.tables.pojos.CtmsAuditChecklist fetchOneById(BigInteger value) {
        return fetchOne(CtmsAuditChecklist.CTMS_AUDIT_CHECKLIST.ID, value);
    }

    /**
     * Fetch records that have <code>RPT_USER_GRP_LV1 IN (values)</code>
     */
    public List<com.test.springboot.jooq.data.jooq.tables.pojos.CtmsAuditChecklist> fetchByRptUserGrpLv1(String... values) {
        return fetch(CtmsAuditChecklist.CTMS_AUDIT_CHECKLIST.RPT_USER_GRP_LV1, values);
    }

    /**
     * Fetch records that have <code>RPT_USER_GRP_LV2 IN (values)</code>
     */
    public List<com.test.springboot.jooq.data.jooq.tables.pojos.CtmsAuditChecklist> fetchByRptUserGrpLv2(String... values) {
        return fetch(CtmsAuditChecklist.CTMS_AUDIT_CHECKLIST.RPT_USER_GRP_LV2, values);
    }

    /**
     * Fetch records that have <code>RPT_USER_GRP_LV3 IN (values)</code>
     */
    public List<com.test.springboot.jooq.data.jooq.tables.pojos.CtmsAuditChecklist> fetchByRptUserGrpLv3(String... values) {
        return fetch(CtmsAuditChecklist.CTMS_AUDIT_CHECKLIST.RPT_USER_GRP_LV3, values);
    }

    /**
     * Fetch records that have <code>CTO_ENDORSER_GRP IN (values)</code>
     */
    public List<com.test.springboot.jooq.data.jooq.tables.pojos.CtmsAuditChecklist> fetchByCtoEndorserGrp(String... values) {
        return fetch(CtmsAuditChecklist.CTMS_AUDIT_CHECKLIST.CTO_ENDORSER_GRP, values);
    }

    /**
     * Fetch records that have <code>PERIOD IN (values)</code>
     */
    public List<com.test.springboot.jooq.data.jooq.tables.pojos.CtmsAuditChecklist> fetchByPeriod(String... values) {
        return fetch(CtmsAuditChecklist.CTMS_AUDIT_CHECKLIST.PERIOD, values);
    }

    /**
     * Fetch records that have <code>HAS_CHANGES IN (values)</code>
     */
    public List<com.test.springboot.jooq.data.jooq.tables.pojos.CtmsAuditChecklist> fetchByHasChanges(Byte... values) {
        return fetch(CtmsAuditChecklist.CTMS_AUDIT_CHECKLIST.HAS_CHANGES, values);
    }

    /**
     * Fetch records that have <code>HAS_UNREPORTED IN (values)</code>
     */
    public List<com.test.springboot.jooq.data.jooq.tables.pojos.CtmsAuditChecklist> fetchByHasUnreported(Byte... values) {
        return fetch(CtmsAuditChecklist.CTMS_AUDIT_CHECKLIST.HAS_UNREPORTED, values);
    }

    /**
     * Fetch records that have <code>IS_AWARE_POTENTIAL IN (values)</code>
     */
    public List<com.test.springboot.jooq.data.jooq.tables.pojos.CtmsAuditChecklist> fetchByIsAwarePotential(Byte... values) {
        return fetch(CtmsAuditChecklist.CTMS_AUDIT_CHECKLIST.IS_AWARE_POTENTIAL, values);
    }

    /**
     * Fetch records that have <code>STATUS IN (values)</code>
     */
    public List<com.test.springboot.jooq.data.jooq.tables.pojos.CtmsAuditChecklist> fetchByStatus(String... values) {
        return fetch(CtmsAuditChecklist.CTMS_AUDIT_CHECKLIST.STATUS, values);
    }

    /**
     * Fetch records that have <code>REPORTED_BY IN (values)</code>
     */
    public List<com.test.springboot.jooq.data.jooq.tables.pojos.CtmsAuditChecklist> fetchByReportedBy(String... values) {
        return fetch(CtmsAuditChecklist.CTMS_AUDIT_CHECKLIST.REPORTED_BY, values);
    }

    /**
     * Fetch records that have <code>REPORTED_AT IN (values)</code>
     */
    public List<com.test.springboot.jooq.data.jooq.tables.pojos.CtmsAuditChecklist> fetchByReportedAt(Timestamp... values) {
        return fetch(CtmsAuditChecklist.CTMS_AUDIT_CHECKLIST.REPORTED_AT, values);
    }

    /**
     * Fetch records that have <code>REMARKS IN (values)</code>
     */
    public List<com.test.springboot.jooq.data.jooq.tables.pojos.CtmsAuditChecklist> fetchByRemarks(String... values) {
        return fetch(CtmsAuditChecklist.CTMS_AUDIT_CHECKLIST.REMARKS, values);
    }

    /**
     * Fetch records that have <code>CTO_REMARKS IN (values)</code>
     */
    public List<com.test.springboot.jooq.data.jooq.tables.pojos.CtmsAuditChecklist> fetchByCtoRemarks(String... values) {
        return fetch(CtmsAuditChecklist.CTMS_AUDIT_CHECKLIST.CTO_REMARKS, values);
    }

    /**
     * Fetch records that have <code>CTO_REVIEWED_BY IN (values)</code>
     */
    public List<com.test.springboot.jooq.data.jooq.tables.pojos.CtmsAuditChecklist> fetchByCtoReviewedBy(String... values) {
        return fetch(CtmsAuditChecklist.CTMS_AUDIT_CHECKLIST.CTO_REVIEWED_BY, values);
    }

    /**
     * Fetch records that have <code>CTO_REVIEWED_AT IN (values)</code>
     */
    public List<com.test.springboot.jooq.data.jooq.tables.pojos.CtmsAuditChecklist> fetchByCtoReviewedAt(Timestamp... values) {
        return fetch(CtmsAuditChecklist.CTMS_AUDIT_CHECKLIST.CTO_REVIEWED_AT, values);
    }

    /**
     * Fetch records that have <code>LSD_REMARKS IN (values)</code>
     */
    public List<com.test.springboot.jooq.data.jooq.tables.pojos.CtmsAuditChecklist> fetchByLsdRemarks(String... values) {
        return fetch(CtmsAuditChecklist.CTMS_AUDIT_CHECKLIST.LSD_REMARKS, values);
    }

    /**
     * Fetch records that have <code>LSD_REVIEWED_BY IN (values)</code>
     */
    public List<com.test.springboot.jooq.data.jooq.tables.pojos.CtmsAuditChecklist> fetchByLsdReviewedBy(String... values) {
        return fetch(CtmsAuditChecklist.CTMS_AUDIT_CHECKLIST.LSD_REVIEWED_BY, values);
    }

    /**
     * Fetch records that have <code>LSD_REVIEWED_AT IN (values)</code>
     */
    public List<com.test.springboot.jooq.data.jooq.tables.pojos.CtmsAuditChecklist> fetchByLsdReviewedAt(Timestamp... values) {
        return fetch(CtmsAuditChecklist.CTMS_AUDIT_CHECKLIST.LSD_REVIEWED_AT, values);
    }

    /**
     * Fetch records that have <code>UPDATED_BY IN (values)</code>
     */
    public List<com.test.springboot.jooq.data.jooq.tables.pojos.CtmsAuditChecklist> fetchByUpdatedBy(String... values) {
        return fetch(CtmsAuditChecklist.CTMS_AUDIT_CHECKLIST.UPDATED_BY, values);
    }

    /**
     * Fetch records that have <code>UPDATED_AT IN (values)</code>
     */
    public List<com.test.springboot.jooq.data.jooq.tables.pojos.CtmsAuditChecklist> fetchByUpdatedAt(Timestamp... values) {
        return fetch(CtmsAuditChecklist.CTMS_AUDIT_CHECKLIST.UPDATED_AT, values);
    }

    /**
     * Fetch records that have <code>CREATED_AT IN (values)</code>
     */
    public List<com.test.springboot.jooq.data.jooq.tables.pojos.CtmsAuditChecklist> fetchByCreatedAt(Timestamp... values) {
        return fetch(CtmsAuditChecklist.CTMS_AUDIT_CHECKLIST.CREATED_AT, values);
    }
}
