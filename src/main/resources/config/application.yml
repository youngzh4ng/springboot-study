spring:
  profiles:
    active: test
#  mvc:
#    static-path-pattern: /assets/**
  resources:
    static-locations: classpath:/static/, classpath:/html/, classpath:/view/, classpath:/icon/
  mvc:
    contentnegotiation:
      favor-parameter: true
      parameter-name: wantFormat
      media-types:
        json: application/json
        iwantajson: application/json
        html: text/html
      favor-path-extension: true
    pathmatch:
      use-registered-suffix-pattern: true
  datasource:
    url: jdbc:h2:~/test
    username: sa
    password: sa
    driver-class-name: org.h2.Driver
    platform: h2
    continue-on-error: true
    schema: classpath:/db/schema-h2.sql
    data: classpath:/db/data-h2.sql
  h2:
    console:
      enabled: true
      settings:
        trace: true
        web-allow-others: true
      path: /h2
  jpa:
    database-platform: org.hibernate.dialect.Oracle10gDialect
    show-sql: true
    hibernate:
      ddl-auto: none
  data:
    mongodb:
      host: consultant-01
      port: 27017
      database: bwtest
      username: bwtest
      password: Password1
  mail:
    host: testsmtp3
    port: 25
    properties:
      mail:
        smtp:
          starttls:
            enable: true
  quartz:
    properties:
      org:
        quartz:
          scheduler:
            instanceName: clusteredScheduler
            instanceId: AUTO
          jobStore:
            class: org.quartz.impl.jdbcjobstore.JobStoreTX
            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
            tablePrefix: QRTZ_
            isClustered: true
            clusterCheckinInterval: 10000
            useProperties: false
          threadPool:
            class: org.quartz.simpl.SimpleThreadPool
            threadCount: 10
            threadPriority: 5
            threadsInheritContextClassLoaderOfInitializingThread: true
    job-store-type: jdbc
#    jdbc:
#      initialize-schema: always
server:
  servlet:
    context-path: /test1
  main:
    banner-mode: log
app:
  name: Spring Boot Test
  description: ${app.name} is a Spring Boot application
  grade: grade
  servers:
  - 'server1 -dev'
  - 'server2 -dev'
  security:
    username: zhangyo
    password: password1
  kebab-case: Kebab Case
  camelCase: Camel Case
  underscoreNotation: Underscore Notation
  UPPER_CASE: Upper Case
  list:
  - name: my name default
    description: my description default
  - name: my name 2 default
    description: my description 2 default
  map:
    key1:
      name: my name default
      description: my description default
logging:
  file: logs/log.log
  level:
    root: info
    org.hibernate.SQL: TRACE
    org.springframework.data.mongodb.core.MongoTemplate: TRACE
    org.springframework.boot.autoconfigure: ERROR
---
spring:
  profiles: test
app:
  name: Spring Boot Test - dev
  description: ${app.name} is a Spring Boot application -dev
  servers:
      - 'server1 -dev'
      - 'server2 -dev'
  security:
      username: zhangyo -dev
      password: password1 -dev
  kebab-case: Kebab Case
  camelCase: Camel Case
  underscoreNotation: Underscore Notation
  UPPER_CASE: Upper Case
  list:
    - name: my name
      description: my description
    - name: my name 2
      description: my description 2
  map:
    key1:
      name: my name
      description: my description

